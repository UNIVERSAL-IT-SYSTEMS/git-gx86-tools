#!/bin/bash

set -e -x

log=/home/mgorny/egencached.log
admin=mgorny@gentoo.org
trap "sendmail ${admin} <<_EOF_
Subject: Script failure notice: ${0}

Hello, Master.

It seems that ${0} has exited unexpectedly.

\$(tail -n 30 \"\${log}\")
_EOF_" EXIT

exec &>> >(tee "${log}")

date +'%Y-%m-%d %H:%M:%S'

PATH=${PATH}:/usr/sbin:/home/mgorny/bin

src=/home/mgorny/dev.git
wc=/tmp/user-wc
dst=/home/mgorny/user.git
sign_key='C3228651!'
no_jobs=128

news_repo=/home/mgorny/gentoo-news
cvs_repo=/home/mgorny/gentoo
dtd_repo=${cvs_repo}/xml/htdocs/dtd
glsa_repo=${cvs_repo}/xml/htdocs/security/en/glsa
herds_repo=${cvs_repo}/xml/htdocs/proj/en/metastructure/herds

# daemon stuff
# we could use systemd instead of reinventing the wheel one day...
pidfile=/home/mgorny/egencache.pid
manifestd_pidfile=/home/mgorny/manifestd.pid
echo "$$" >${pidfile}

unset want_exit
# do a run at start
want_regen=1

trap 'want_exit=1' INT TERM
trap 'want_regen=1' HUP

# wc may be on tmpfs
if [ ! -d "${wc}" ]; then
	git clone -s "${dst}" "${wc}"
fi

# the main loop
cd "${wc}"
while :; do
	if [ -n "${want_exit}" ]; then
		break
	fi

	while [ -n "${want_regen}" ]; do
		unset want_regen

		prev_id=$(git rev-parse master)

		# update the rsync repo
		git pull --commit -S"${sign_key}" --no-edit --quiet "${src}" master

		# update news
		( cd "${news_repo}"; git pull --ff-only )
		# merge the non-sense structure...
		tmpdir=$(mktemp -d)
		cp -r "${news_repo}"/*/. "${tmpdir}"/
		rsync -r --delete "${tmpdir}"/. metadata/news
		rm -rf "${tmpdir}"

		# update dtds
		( cd "${dtd_repo}"; cvs up -dP )
		rsync -r --delete --exclude=CVS "${dtd_repo}"/. metadata/dtd

		# update glsas
		( cd "${glsa_repo}"; cvs up -dP )
		rsync -r --delete --exclude=CVS "${glsa_repo}"/. metadata/glsa

		# update herds.xml
		( cd "${herds_repo}"; cvs up -dP herds.xml )
		cp "${herds_repo}"/herds.xml metadata/herds.xml

		# check if we did find any changes
		git add -A
		git diff --exit-code --quiet --cached "${prev_id}" && break

		# allow interrupting during boring cache regen
		trap 'exit 1' INT TERM

		# run egencache
		egencache --update --update-use-local-desc --jobs="${no_jobs}" \
			--portdir="${wc}" --repo=gentoo

		# restore safe termination handler
		trap 'want_exit=1' INT TERM

		# add untracked files
		git add -A

		# commit if there's anything to commit
		git diff --exit-code --quiet --cached || \
		git commit -q -S"${sign_key}" -m 'Metadata update'

		git push "${dst}" master

		kill -HUP "$(cat "${manifestd_pidfile}")" || :
	done

	# wait for a signal or try every 10 minutes
	sleep 600 &
	sleeppid=$!
	wait && want_regen=1 || kill "${sleeppid}"
done

rm -f "${pidfile}"
trap - EXIT
exit 0
