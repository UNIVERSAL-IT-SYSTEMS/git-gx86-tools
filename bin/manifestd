#!/bin/bash

set -e -x

log=/home/mgorny/manifestd.log
admin=mgorny@gentoo.org
trap "sendmail ${admin} <<_EOF_
Subject: Script failure notice: ${0}

Hello, Master.

It seems that ${0} has exited unexpectedly.

\$(tail -n 30 \"\${log}\")
_EOF_" EXIT

exec &>> >(tee "${log}")

date +'%Y-%m-%d %H:%M:%S'

PATH=${PATH}:/usr/sbin:/home/mgorny/bin

src=/home/mgorny/user.git
wc=/tmp/rsync-wc
dst=/home/mgorny/rsync.git
mirror=/tmp/rsync-mirror
sign_key='C3228651!'

# daemon stuff
# we could use systemd instead of reinventing the wheel one day...
pidfile=/home/mgorny/manifestd.pid
echo "$$" >${pidfile}

unset want_exit
# do a run at start
want_regen=1

trap 'want_exit=1' INT TERM
trap 'want_regen=1' HUP

# wc and mirror may be on tmpfs
if [ ! -d "${wc}" ]; then
	git clone -s "${dst}" "${wc}"
fi
if [ ! -d "${mirror}" ]; then
	git clone -s "${dst}" "${mirror}"
fi

# the main loop
cd "${wc}"
while :; do
	if [ -n "${want_exit}" ]; then
		break
	fi

	while [ -n "${want_regen}" ]; do
		unset want_regen

		prev_id=$(git rev-parse master)

		# update the rsync repo
		if ! git pull -s recursive -X theirs \
			--commit -S"${sign_key}" --no-edit --quiet "${src}" master
		then
			# failed merge? likely modify/delete case
			moddel=$(git status --porcelain | grep ^UD | cut -d' ' -f2)
			[ -n "${moddel}" ]
			git rm ${moddel}
			git commit -S"${sign_key}" --no-edit --quiet
		fi

		files=$(git diff --name-only "${prev_id}"..master \
				| cut -d/ -f1-2 | uniq \
				| sed -e '/^profiles/d' -e '/^metadata/d' -e '/^eclass/d' -e '/^licenses/d' -e '/^scripts/d' -e '/^[^/]*$/d')

		# update Manifests
		for f in ${files}; do
			[ -d "${f}" ] || continue
			( cd "${f}"; repoman manifest )
			gpg --sign --digest-algo SHA256 --clearsign --yes \
				--default-key "${sign_key}" "${f}"/Manifest
			mv "${f}"/Manifest.asc "${f}"/Manifest
			git add "${f}"/Manifest
		done

		# commit if there's anything to commit
		git diff --exit-code --quiet --cached || \
		git commit -q -S"${sign_key}" -m 'Thicken and sign the Manifests'

		git push "${dst}" master

		( cd "${mirror}"; git pull --ff-only --quiet "${dst}" master )

		# push to github as well
		( cd "${dst}"; git push origin master )
	done

	# wait for a signal or try every 10 minutes
	sleep 600 &
	sleeppid=$!
	wait && want_regen=1 || kill "${sleeppid}"
done

rm -f "${pidfile}"
trap - EXIT
exit 0
